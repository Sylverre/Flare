<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="8" MadCap:lastHeight="3381.667" MadCap:lastWidth="724">
    <head><title></title>
    </head>
    <body>
        <h1><a name="__RefHeading___Toc414541371"></a><a name="_Attribute_Types_and"></a>Attribute Types and Descriptions</h1>
        <p>The following table contains the possible values for Attribute Types and a brief description of each.&#160; Further considerations are presented below.</p>
        <table class="TableNormal" style="margin-left: 0;margin-right: auto;">
            <col style="width: 106pt;" />
            <col style="width: 325pt;" />
            <thead>
                <tr>
                    <th><span style="font-weight: bold;">Asset Attribute Type</span>
                    </th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr style="height: 15pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Asset Reference</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">A reference to a particular asset in the system</p>
                    </td>
                </tr>
                <tr style="height: 15pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Boolean</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">A True/False value</p>
                    </td>
                </tr>
                <tr style="height: 15pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Custom Type List Reference</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">A list of Custom Type references</p>
                    </td>
                </tr>
                <tr style="height: 69pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Custom Type Reference</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">A reference to a Custom Type<br />When an entity contains a Custom Type Attribute, it will inherit the attributes from the Custom Type that is selected as the value of the attribute.</p>
                    </td>
                </tr>
                <tr style="height: 36pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Data Object</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">Any form of data<br />Examples: images, PDFs, DOC files, XLS files, etc.</p>
                    </td>
                </tr>
                <tr style="height: 15pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Date</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">A single date, such as January 31, 2008.</p>
                    </td>
                </tr>
                <tr style="height: 15pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Enum</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">Enum attributes contain an ordered list of selectable values.</p>
                    </td>
                </tr>
                <tr style="height: 66pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Floating Point</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">Refers to the fact that the radix point (decimal point, or binary point) can "float"; this means that it can be placed anywhere relative to the significant digits of the number. Temperature, a Status Attribute, is of type Floating Point.</p>
                    </td>
                </tr>
                <tr style="height: 15pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Integer</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">A whole number</p>
                    </td>
                </tr>
                <tr style="height: 15pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">String</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">A string</p>
                    </td>
                </tr>
                <tr style="height: 15pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">String List</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">A list of strings</p>
                    </td>
                </tr>
                <tr style="height: 15pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Tag Reference</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">Reference to a particular tag in the system</p>
                    </td>
                </tr>
                <tr style="height: 78pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">Time and Date</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">A single date/time accurate to seconds and expressed in GMT</p>
                        <p class="note" MadCap:autonum="&lt;b&gt;NOTE:&lt;/b&gt; &#160;">The <MadCap:variable name="Variables.ProductName" /> web interface will adjust the value of a timestamp value by the browser’s time zone, and offset from GMT. <br />No adjustment is made to a timestamp value if the value is being updated via an <MadCap:variable name="Variables.ProductName" /> API.</p>
                    </td>
                </tr>
                <tr style="height: 32pt;" class="tr_3">
                    <td class="td_13">
                        <p class="p_48">URL</p>
                    </td>
                    <td class="td_14">
                        <p class="p_22">The Uniform (or Universal) Resource Locator, which is the address of a web page</p>
                    </td>
                </tr>
            </tbody>
        </table>
        <p>When choosing the Type for an Attribute, be sure to keep the following points in mind.&#160; </p>
        <p><span class="Strong">Floating Point</span> or <span class="Strong">Integer:</span> The Units field appears if you choose this Asset Attribute Type. This setting defines how the numerical value is stored on the server; however, it does not enforce how the value is displayed. If a Unit is chosen, the values will be converted and displayed according to the Units Display setting of the User account. This is useful for expression attributes since the Units needs to match the Units of the original attribute. For example, if you create an Attribute for <span class="Strong_2">Max Temperature</span> to be used in conjunction with an existing Temperature attribute, then the Units setting should match, that is, if Units for the Temperature attribute is set to Celsius, then ensure that the Units settings for Max Temperature is also set to Celsius. In addition to the Units field, Floating Point and Integer type Attributes also allow setting a Minimal Value and a Maximum Value.</p>
        <p><span class="Strong">Integer</span>,<span class="Strong"> Floating Point</span>,<span class="Strong"> String</span>, and<span class="Strong"> URL:</span> All four of these Attribute types let you set a Regular Expression which can be used to validate user input.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;NOTE:&lt;/b&gt; &#160;">For more information on regular expressions, search the Internet; abundant learning resources exist on the topic.
        </p>
        <p><span class="Strong">String:</span> If the type is String, then an additional area will appear for specifying an optional value constraint of a regular expression which will be used to validate user input. Selecting the <span class="Strong">Constrain attribute value to values list</span> checkbox causes the area to expand and provide an entry area for specifying a list of strings that are valid selections. When the checkbox is selected and this feature is enabled, users cannot type in free-form information and instead must choose a pre-defined value from the list.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;NOTE:&lt;/b&gt; &#160;">Entering unconstrained (free-form) string data can make standardized reporting almost impossible when multiple users are entering data into the system. When at all possible, use constrained string lists to allow users to select a choice or multiple choices rather than to allow them to enter free-form string data. However, if you do not constrain values to a list, then use regular expressions in order to ensure that string data is always in the correct format.</p>
        <p><span class="Strong">String List:</span> A String List is a restricted list that is populated by a pre-defined list of acceptable values. The <span class="Strong">Add</span>, <span class="Strong">Edit </span>and <span class="Strong">Delete </span>buttons provide mechanisms to manage the items in the list. Use the <span class="Strong">Up </span>and <span class="Strong">Down </span>buttons to move an item higher or lower in the list.</p>
        <p><span class="Strong">Asset Reference:</span> When you define an Attribute as an Asset Reference, an additional area appears in the editor with a drop-down list of Asset Types. This type is used to refer (or link to) an asset that has already been entered in to the <MadCap:variable name="Variables.ProductName" /> database. An example would be an asset attribute called Connected Display which points to an Asset Type called LCD Display. When a new asset type is added to the system and that asset type is defined with the attribute Connected Display, then the user will be prompted to select from a sub-list of assets, for example, LCD Display. In this way if a desktop PC is added to the system, the LCD display list, which is also in the system, can then be “linked” (refer) to it.</p>
        <p>These are just a few of the variable Asset Attribute Type configuration options. For more detailed assistance with configuring Asset Types and Custom Asset Types, please contact <MadCap:variable name="Variables.CompanyName" /> support.<br /></p>
        <h2>Editing Asset Attributes</h2>
        <p>To edit an Asset Attribute, perform the following steps:</p>
        <ol>
            <li>Navigate to <span class="strong">Admin Console &gt; Data Schema &gt; Asset Attributes </span>and the asset attributes task pane will appear on the right. The asset attributes task pane is divided into two sections which are the list of defined asset attributes on the left and the asset attribute editor on the right.<br /></li>
            <li>Select the appropriate asset attribute from the list of asset attributes. Once asset attribute is selected, the editor will appear on the right of the task pane displaying the details.<br /></li>
            <li>Edit the appropriate details of the asset attribute and then click the <span class="Strong">Save Changes</span> button.<br /><br /></li>
        </ol>
        <p class="note" MadCap:autonum="&lt;b&gt;NOTE:&lt;/b&gt; &#160;">After an attribute is created, the following three fields cannot be edited: Values Are Unique, ID, and Type.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;NOTE:&lt;/b&gt; &#160;"> If you want to use the Values Are Unique option for an Attribute, the box must be checked at the time the Asset Attribute is created. The restrictions can be removed at any time; however, you cannot place this restriction on the attribute after it has been created.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;NOTE:&lt;/b&gt; &#160;"> &#160; These fields will appear but will be grayed out. If any of these three fields need to be changed, the asset attribute must be deleted and recreated. Also notice that a new field or prompt is displayed once an asset is created which is Retired. <br /><br />You should retire an asset attribute that is used by Asset Types when you no longer desire that the asset attribute be used. To do this, remove this attribute from the list of attributes used by Asset Types. When the attribute is removed, all asset types that use the asset attribute will no longer prompt the user for this particular asset attribute. However, existing assets that do have values for this particular asset attribute will continue to reside in the database and be usable in reports.</p>
        <p class="note" MadCap:autonum="&lt;b&gt;NOTE:&lt;/b&gt; &#160;"> If there are no Asset Types using the asset attribute and it is no longer needed, then the best course of action might be to delete the asset attribute.
        </p>
        <h2>Deleting Asset Attributes</h2>
        <p>To delete an Asset Attribute, perform the following steps:</p>
        <ol>
            <li>Navigate to <span class="strong">Admin Console &gt; Data Schema &gt; Asset Attributes </span>and the asset attributes task pane will appear on the right. The asset attributes task pane is divided into two sections which are the list of defined asset attributes on the left and the asset attribute editor on the right. <span class="strong">Add </span>and <span class="strong">Delete </span>buttons are displayed above the task pane.<br /></li>
            <li>Select the appropriate asset attribute from the list of asset attributes.<br /></li>
            <li>Click the <span class="strong">Delete </span>button to delete the asset attribute. If the asset attribute is in use by one or more Asset Types, the asset attribute cannot be deleted; instead, remove the association of the asset to the attribute.
            </li>
        </ol>
    </body>
</html>